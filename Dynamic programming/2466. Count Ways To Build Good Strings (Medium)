class Solution {
public:
    int countGoodStrings(int low, int high, int zero, int one) {
        int dp[high+1]; // dp[i] = ways to create string of size i so we need add 1 for 0-sized

        //See this not "one" or "zero" but a bunch of a elements
        int largeBunch = std::max(one, zero);
        int smallBunch = std::min(one, zero);
        // word of a lenght 0 is always exist and createble 
        dp[0] = 1;

        for (int i = 1; i < largeBunch; i ++)
            dp[i] = 0;

        for (int i = smallBunch; i < largeBunch; i=i+smallBunch) 
            dp[i] = 1;
        
        for (int i = largeBunch; i <= high; i++) 
            dp[i] = (dp[i-smallBunch] + dp[i-largeBunch])%1000000007;

        int res = 0;
        for (int i = low; i <= high; i ++)
            res = (res + dp[i])%1000000007;
        return res;
    }
};
